name: —Åicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  Windows:
   runs-on: windows-latest

   steps:

    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install latest CMake with Chocolatey
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install conan

    - name: Install LLVM/Clang with Chocolatey
      run: |
        choco install llvm -y

    - name: Add LLVM to PATH
      run: |
        echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Install Doxygen with Chocolatey
      run: |
        choco install doxygen.install -y
        choco install graphviz -y
    
    - name: Configure Conan
      run: |
        conan profile detect --force

    - name: Create build directory
      run: mkdir build

    - name: Conan install packages
      run: |
       conan install . --build=missing -s compiler.cppstd=20 -c tools.cmake.cmaketoolchain:generator=Ninja
 
    - name: Configure and build with VS environment
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && cmake -S . --preset conan-release && cd build/Release && cmake --build .

    - name: Test
      run: cd build/Release && ctest -V -j4

      
  Linux:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
         os: [ubuntu-latest]
         generator: [Ninja]
         exclude:
          - os: ubuntu-latest
            generator: Ninja
      

    steps:
      - uses: actions/checkout@v4

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan

      - name: Install Doxygen
        run: |
         sudo apt-get update
         sudo apt-get install -y doxygen graphviz

      - name: Install clang-tidy and dependencies
        run: |
         sudo apt-get update
         sudo apt-get install -y clang-tidy clang clang-tools cmake ninja-build
       
      - name: Configure Conan profiles
        run: |
          conan profile detect --force
      
      - name: Install latest CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 4.0.0

      - name: Install make
        run: |
         sudo apt-get update
         sudo apt-get install -y make

      - name: Install dependencies with Conan
        run : |
          conan install . --build=missing \
          -s compiler.cppstd=20 -c tools.cmake.cmaketoolchain:generator=Ninja

      - name: Configure CMake
        run: | 
          cmake -S . --preset conan-release

      - name: Build
        run: cmake --build build/Release

      - name: Test
        run: |
          cd build/Release && ctest -V -j4
